PROJECT(LIFE)
CMAKE_MINIMUM_REQUIRED(VERSION 3.7.1)
INCLUDE(CheckCXXCompilerFlag)

SET(LIFE_VERSION 4.0.1)
SET(ORGANIZATION "DV")

CHECK_CXX_COMPILER_FLAG("-std=c++14" COMPILER_SUPPORTS_CXX14)
IF(COMPILER_SUPPORTS_CXX14)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
  SET(CMAKE_CXX_STANDARD 14)
ENDIF()

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-reorder -Wno-long-long -pedantic -Wno-comment -fPIC")
SET(CMAKE_VERBOSE_MAKEFILE TRUE)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)

FIND_PACKAGE(TIFF REQUIRED)
MESSAGE("TIFF_LIBRARIES = ${TIFF_LIBRARIES}")

FIND_PACKAGE(Qt5Widgets REQUIRED)
MESSAGE("Qt5Widgets_INCLUDE_DIRS: ${Qt5Widgets_INCLUDE_DIRS}")

FIND_PACKAGE(Qt5Gui REQUIRED)
MESSAGE("Qt5Gui_INCLUDE_DIRS: ${Qt5Gui_INCLUDE_DIRS}")

FIND_PACKAGE(Qt5Core REQUIRED)
MESSAGE("Qt5Core_INCLUDE_DIRS: ${Qt5Core_INCLUDE_DIRS}")

FIND_PACKAGE(Qt5LinguistTools REQUIRED)

INCLUDE_DIRECTORIES(${Qt5Core_INCLUDE_DIRS} ${Qt5Widgets_INCLUDE_DIRS})
SET(QT_LIBRARIES ${Qt5Core_LIBRARIES} ${Qt5Widgets_LIBRARIES} ${Qt5Gui_LIBRARIES})

SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTOUIC ON)
SET(CMAKE_AUTORCC ON)

CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/configure.h.in ${PROJECT_BINARY_DIR}/configure.h)
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})

SET(PROJECT_SOURCES "" CACHE INTERNAL "sources of project")
SET(PROJECT_HEADERS "" CACHE INTERNAL "header of project")
SET(PROJECT_UI_FILES "" CACHE INTERNAL "UI files of project")
SET(PROJECT_QSS_FILES "" CACHE INTERNAL "qss stylesheet project")
SET(PROJECT_RCC_FILES "" CACHE INTERNAL "rcc project files")
SET(PROJECT_TS_FILES "" CACHE INTERNAL "ts project files")
SET(PROJECT_QM_FILES "" CACHE INTERNAL "qm project files")
SET(UPDATE_TS CACHE BOOL "") # questo lo setto qui cosi poi lo posso modificare da QtCreator

SET(PROJECT_FOLDERS
    "${PROJECT_SOURCE_DIR}/core"
    "${PROJECT_SOURCE_DIR}/global"
    "${PROJECT_SOURCE_DIR}/ui")

FOREACH(item ${PROJECT_FOLDERS})
    MESSAGE("Folder: " ${item})
    INCLUDE_DIRECTORIES(${item})
    ADD_SUBDIRECTORY(${item})
ENDFOREACH(item)

MESSAGE("*** PROJECT_SOURCES: ${PROJECT_SOURCES}")
MESSAGE("*** PROJECT_HEADERS: ${PROJECT_HEADERS}")
MESSAGE("*** PROJECT_UI_FILES: ${PROJECT_UI_FILES}")
MESSAGE("*** PROJECT_QSS_FILES: ${PROJECT_QSS_FILES}")
MESSAGE("*** PROJECT_QRC_FILES: ${PROJECT_QRC_FILES}")
MESSAGE("*** PROJECT_TS_FILES: ${PROJECT_TS_FILES}")
MESSAGE("*** PROJECT_QM_FILES: ${PROJECT_QM_FILES}")

MESSAGE("LINK_LIBRARIES: ${TIFF_LIBRARIES} ${QT_LIBRARIES}")

IF(UPDATE_TS)

    MESSAGE("QT5_CREATE_TRANSLATION")
    FOREACH(TS_ITEM ${PROJECT_TS_FILES})
        QT5_CREATE_TRANSLATION(${PROJECT_SOURCES} ${PROJECT_HEADERS} ${PROJECT_UI_FILES} main.cpp ${TS_ITEM})
    ENDFOREACH(TS_ITEM)

    SET(PROJECT_QRC_FILES "") # questo serve per evitare problemi di compilazione RCC con CMAKE_AUTORCC ON

ELSE(UPDATE_TS)

    MESSAGE("QT5_ADD_TRANSLATION")
    FOREACH(QM_ITEM ${PROJECT_QM_FILES})
        QT5_ADD_TRANSLATION(${QM_ITEM} ${PROJECT_TS_FILES})
    ENDFOREACH(QM_ITEM)

ENDIF(UPDATE_TS)


ADD_EXECUTABLE(${PROJECT_NAME}-${LIFE_VERSION}
    main.cpp
    ${PROJECT_SOURCES}
    ${PROJECT_UI_FILES}
    ${PROJECT_QSS_FILES}
    ${PROJECT_QM_FILES}
    ${PROJECT_QRC_FILES}
    )

TARGET_LINK_LIBRARIES(${PROJECT_NAME}-${LIFE_VERSION}
    ${TIFF_LIBRARIES}
    ${QT_LIBRARIES})


FOREACH(QM_ITEM ${PROJECT_QM_FILES})
    ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME}-${LIFE_VERSION}
        PRE_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy "${PROJECT_BINARY_DIR}/${QM_ITEM}" "${PROJECT_SOURCE_DIR}/ui/lang/${QM_ITEM}"
        )
ENDFOREACH(QM_ITEM)
